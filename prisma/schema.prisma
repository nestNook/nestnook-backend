// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid())
  name           String
  email          String
  password_hash  String
  phone_number   String
  email_verified Boolean   @default(false)
  otp_enabled    Boolean   @default(false)
  otp_secret     String?
  google_id      String?
  profile_pic    Image?    @relation(fields: [profile_pic_id], references: [id])
  profile_pic_id String?
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  Address        Address[]
  Carts          Cart[]
  Admin          Admin[]
  Comments       Comment[]
  Review         Review[]
}

model Address {
  id            String      @id @default(uuid())
  user          User?       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       String?
  fabricator    Fabricator? @relation(fields: [fabricator_id], references: [id], onDelete: Cascade)
  fabricator_id String?
  postal_code   String
  country       String
  street        String
  state         String
  city          String
  neighborhood  String
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  Order         Order[]
}

model Product {
  id            String      @id @default(uuid())
  sku           String
  name          String
  description   String
  category      String
  price         BigInt
  quantity      Int
  currency      String
  sector        Sector      @relation(fields: [sector_id], references: [id])
  sector_id     String
  fabricator    Fabricator  @relation(fields: [fabricator_id], references: [id])
  fabricator_id String
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  OrderItem     OrderItem[]
}

model Fabricator {
  id           String    @id @default(uuid())
  registry     String
  name         String
  phone_number String
  email        String
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  Product      Product[]
  Address      Address[]
}

model Sector {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  Product    Product[]
  Coupon     Coupon[]
}

model ProductImage {
  id         String   @id @default(uuid())
  image      Image    @relation(fields: [image_id], references: [id], onDelete: Cascade)
  image_id   String
  product_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Image {
  id           String         @id @default(uuid())
  url          String
  alt_text     String
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  ProductImage ProductImage[]
  User         User[]
}

model Cart {
  id          String        @id @default(uuid())
  user        User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String
  amount      Decimal
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  CartProduct CartProduct[]
}

model CartProduct {
  id         String   @id @default(uuid())
  cart       Cart     @relation(fields: [cart_id], references: [id], onDelete: Cascade)
  cart_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Coupon {
  id                  String   @id @default(uuid())
  name                String
  discount_percentage Int
  limit               Int?
  user_limit          Int
  sector              Sector   @relation(fields: [sector_id], references: [id])
  sector_id           String
  active              Boolean
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}

model UsedCoupon {
  id          String   @id @default(uuid())
  coupon_id   String
  customer_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Regions {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ShippingMethod {
  id         String   @id @default(uuid())
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ShippingMethodRegions {
  id                 String   @id @default(uuid())
  shipping_method_id String
  region_id          String
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
}

model PaymentMethod {
  id          String   @id @default(uuid())
  name        String
  description String
  active      Boolean
  tax         Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  Order       Order[]
}

model Order {
  id                 String        @id @default(uuid())
  amount             Decimal
  status             String
  billing_address    Address       @relation(fields: [billing_address_id], references: [id])
  billing_address_id String
  payment_method     PaymentMethod @relation(fields: [payment_method_id], references: [id])
  payment_method_id  String
  created_at         DateTime      @default(now())
  updated_at         DateTime      @updatedAt
  OrderItem          OrderItem[]
}

model OrderItem {
  id                  String   @id @default(uuid())
  order               Order    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  order_id            String
  product             Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  product_id          String
  discount_percentage Int
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
}

model Admin {
  id          String    @id @default(uuid())
  user        User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id     String
  role        Role      @relation(fields: [role_id], references: [id])
  role_id     String
  hiring_date DateTime? @default(now())
}

model Role {
  id             String           @id @default(uuid())
  RolePermission RolePermission[]
  description    String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  Admin          Admin[]
}

model Permission {
  id             String           @id @default(uuid())
  name           String
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  RolePermission RolePermission[]
}

model RolePermission {
  id            String     @id @default(uuid())
  role          Role       @relation(fields: [role_id], references: [id], onDelete: Cascade)
  role_id       String
  permission    Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  permission_id String
  created_at    DateTime   @default(now())
  updated_at    DateTime   @updatedAt
}

model Comment {
  id           String         @id @default(uuid())
  title        String
  comment      String
  user         User           @relation(fields: [user_id], references: [id], onDelete: Cascade)
  parent_id    String?
  user_id      String
  edited       Boolean?       @default(false)
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  CommentImage CommentImage[]
  Review       Review[]
}

model CommentImage {
  id         String   @id @default(uuid())
  comment    Comment  @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  comment_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Review {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    String
  stars      Int
  comment    Comment  @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  comment_id String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model EmailStandardMessage {
  id          String   @id @default(uuid())
  from        String
  subject     String
  content     String
  template_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model EmailTemplate {
  id         String   @id @default(uuid())
  html       String
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model EmailTemplatePlaceholder {
  id                String   @id @default(uuid())
  email_template_id String
  placeholder_id    String
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model Placeholder {
  id          String   @id @default(uuid())
  name        String
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}
